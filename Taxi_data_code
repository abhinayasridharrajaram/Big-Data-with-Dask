import dask.dataframe as dd
import s3fs
import pandas as pd
import numpy as np
import numpy as np
import pandas as pd
from dask.distributed import Client
import dask.dataframe as dd
import math
taxi_info = dd.read_csv(
    's3://abhinaya321/2019_yellow_trip_data.csv',

    storage_options={'anon': True, 'use_ssl': False}
)



#taxi_info.take(1)

def filter(df: dd.DataFrame) -> dd.DataFrame:
    """Process data"""
    return (
        df[[
            'tpep_pickup_datetime', 'tpep_dropoff_datetime',
            'trip_distance', 'total_amount'
        ]]
        .astype({
            'tpep_pickup_datetime': 'datetime64[ms]',
            'tpep_dropoff_datetime': 'datetime64[ms]'
        })
        .assign(duration_drive_time=(lambda df: (
            df.tpep_dropoff_datetime - df.tpep_pickup_datetime).dt.seconds
            // 300))

        .query('duration_drive_time <= 100 & trip_distance >= 40')
        .drop(['tpep_pickup_datetime', 'tpep_dropoff_datetime'], axis=1)
        .round({'trip_distance': 0})
        .groupby(['duration_drive_time', 'trip_distance'])
        .sum()
        .rename(columns={'total_amount': 'sum_amount'})
    )


def result(df: dd.DataFrame) -> pd.DataFrame:
    """Execute dask task graph and compute final results"""
    return (
        df
        .compute()
        .reset_index()
        .pivot(
             index='duration_drive_time',
             columns='trip_distance',
             values='sum_amount'
        )
        .fillna(0)
    )


if __name__ == "__main__":
    client = Client()

    taxi_data = dd.read_csv(
        's3://abhinaya321/2019_yellow_trip_data.csv',
        storage_options={'anon': True, 'use_ssl': False}
    )

    filtered_data = filter(taxi_info)
    fare = result(filtered_data)
