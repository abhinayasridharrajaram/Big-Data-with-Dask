import math
import numpy as np
import s3fs
import pandas as pd
from dask.distributed import Client
import dask.dataframe as dd

taxi_info = dd.read_csv(
    's3://abhinaya321/2019_yellow_trip_data.csv',

    storage_options={'anon': True, 'use_ssl': False}
)

def filter(df: dd.DataFrame) -> dd.DataFrame:
    """Process data"""
    return (
        df[[
            'VendorID','PULocationID'
            , 'total_amount','fare_amount', 'tip_amount'
        ]]

        .assign(tip_percent=(lambda df: (
            ( df.tip_amount)/df.fare_amount)
           ))

        .query('tip_percent >= 0.3 & total_amount >= 200')
        #.drop(['fare_Amount', 'tip_amount'], axis=1)
        .rename(columns={'PULocationID': 'Expensive_locations_loved_by_customers'})
        .groupby(['Expensive_locations_loved_by_customers'])
        .sum()



    )

def result(df: dd.DataFrame) -> pd.DataFrame:
    """Execute dask task graph and compute final results"""
    return (
        df
        .compute()

    )

if __name__ == "__main__":
    client = Client()

    taxi_data = dd.read_csv(
        's3://abhinaya321/2019_yellow_trip_data.csv',
        storage_options={'anon': True, 'use_ssl': False}
    )

    filtered_data = filter(taxi_info)
    fare = result(filtered_data)

    print(fare.to_string())
